{
  "platforms": {
    "npm": {
      "name": "npm",
      "language": "javascript",
      "registry": "https://registry.npmjs.org",
      "api_endpoint": "https://api.npmjs.org",
      "deploy_command": "npm publish",
      "tracking_endpoints": [
        "https://api.npmjs.org/downloads/point/last-month/{package}",
        "https://api.npmjs.org/downloads/range/last-week/{package}"
      ],
      "required_files": ["package.json"],
      "optional_files": ["README.md", "LICENSE", ".npmignore"],
      "deploy_script": "templates/npm-deploy.sh",
      "package_manager": "npm",
      "version_file": "package.json",
      "version_field": "version",
      "build_command": "npm run build",
      "test_command": "npm test",
      "install_command": "npm install",
      "publish_flags": ["--access", "public"],
      "authentication": {
        "type": "token",
        "env_var": "NPM_TOKEN",
        "config_key": "//registry.npmjs.org/:_authToken"
      }
    },
    "yarn": {
      "name": "yarn",
      "language": "javascript",
      "registry": "https://registry.yarnpkg.com",
      "api_endpoint": "https://api.npmjs.org",
      "deploy_command": "yarn publish",
      "tracking_endpoints": [
        "https://api.npmjs.org/downloads/point/last-month/{package}",
        "https://api.npmjs.org/downloads/range/last-week/{package}"
      ],
      "required_files": ["package.json"],
      "optional_files": ["README.md", "LICENSE", ".yarnignore"],
      "deploy_script": "templates/yarn-deploy.sh",
      "package_manager": "yarn",
      "version_file": "package.json",
      "version_field": "version",
      "build_command": "yarn build",
      "test_command": "yarn test",
      "install_command": "yarn install",
      "publish_flags": ["--access", "public"],
      "authentication": {
        "type": "token",
        "env_var": "NPM_TOKEN",
        "config_key": "//registry.npmjs.org/:_authToken"
      }
    },
    "jsr": {
      "name": "jsr",
      "language": "javascript",
      "registry": "https://jsr.io",
      "api_endpoint": "https://jsr.io/api",
      "deploy_command": "jsr publish",
      "tracking_endpoints": [
        "https://jsr.io/api/packages/{package}/stats"
      ],
      "required_files": ["deno.json", "mod.ts"],
      "optional_files": ["README.md", "LICENSE"],
      "deploy_script": "templates/jsr-deploy.sh",
      "package_manager": "jsr",
      "version_file": "deno.json",
      "version_field": "version",
      "build_command": "deno run --allow-all build.ts",
      "test_command": "deno test",
      "install_command": "jsr install",
      "authentication": {
        "type": "token",
        "env_var": "JSR_TOKEN",
        "config_key": "jsr_token"
      }
    },
    "deno": {
      "name": "deno",
      "language": "javascript",
      "registry": "https://deno.land/x",
      "api_endpoint": "https://deno.land/api",
      "deploy_command": "deno run --allow-all deploy.ts",
      "tracking_endpoints": [
        "https://deno.land/api/packages/{package}/stats"
      ],
      "required_files": ["mod.ts", "deno.json"],
      "optional_files": ["README.md", "LICENSE"],
      "deploy_script": "templates/deno-deploy.sh",
      "package_manager": "deno",
      "version_file": "deno.json",
      "version_field": "version",
      "build_command": "deno run --allow-all build.ts",
      "test_command": "deno test",
      "install_command": "deno install",
      "authentication": {
        "type": "token",
        "env_var": "DENO_TOKEN",
        "config_key": "deno_token"
      }
    },
    "jspm": {
      "name": "jspm",
      "language": "javascript",
      "registry": "https://jspm.org",
      "api_endpoint": "https://jspm.org/api",
      "deploy_command": "jspm publish",
      "tracking_endpoints": [
        "https://jspm.org/api/packages/{package}/stats"
      ],
      "required_files": ["package.json", "jspm.config.js"],
      "optional_files": ["README.md", "LICENSE"],
      "deploy_script": "templates/jspm-deploy.sh",
      "package_manager": "jspm",
      "version_file": "package.json",
      "version_field": "version",
      "build_command": "jspm build",
      "test_command": "jspm test",
      "install_command": "jspm install",
      "authentication": {
        "type": "token",
        "env_var": "JSPM_TOKEN",
        "config_key": "jspm_token"
      }
    },
    "pypi": {
      "name": "pypi",
      "language": "python",
      "registry": "https://pypi.org",
      "api_endpoint": "https://pypistats.org/api",
      "deploy_command": "twine upload dist/*",
      "tracking_endpoints": [
        "https://pypistats.org/api/packages/{package}/overall"
      ],
      "required_files": ["setup.py", "pyproject.toml"],
      "optional_files": ["README.md", "LICENSE", "MANIFEST.in"],
      "deploy_script": "templates/pypi-deploy.sh",
      "package_manager": "pip",
      "version_file": "setup.py",
      "version_field": "version",
      "build_command": "python -m build",
      "test_command": "python -m pytest",
      "install_command": "pip install -e .",
      "authentication": {
        "type": "credentials",
        "env_var": "PYPI_USERNAME",
        "password_env_var": "PYPI_PASSWORD",
        "config_file": "~/.pypirc"
      }
    },
    "conda": {
      "name": "conda",
      "language": "python",
      "registry": "https://anaconda.org",
      "api_endpoint": "https://api.anaconda.org",
      "deploy_command": "anaconda upload dist/*.tar.bz2",
      "tracking_endpoints": [
        "https://api.anaconda.org/package/{package}/files"
      ],
      "required_files": ["meta.yaml", "build.sh"],
      "optional_files": ["README.md", "LICENSE"],
      "deploy_script": "templates/conda-deploy.sh",
      "package_manager": "conda",
      "version_file": "meta.yaml",
      "version_field": "version",
      "build_command": "conda build .",
      "test_command": "conda build --test .",
      "install_command": "conda install",
      "authentication": {
        "type": "token",
        "env_var": "ANACONDA_TOKEN",
        "config_key": "anaconda_token"
      }
    },
    "poetry": {
      "name": "poetry",
      "language": "python",
      "registry": "https://pypi.org",
      "api_endpoint": "https://pypistats.org/api",
      "deploy_command": "poetry publish",
      "tracking_endpoints": [
        "https://pypistats.org/api/packages/{package}/overall"
      ],
      "required_files": ["pyproject.toml"],
      "optional_files": ["README.md", "LICENSE"],
      "deploy_script": "templates/poetry-deploy.sh",
      "package_manager": "poetry",
      "version_file": "pyproject.toml",
      "version_field": "version",
      "build_command": "poetry build",
      "test_command": "poetry run pytest",
      "install_command": "poetry install",
      "authentication": {
        "type": "token",
        "env_var": "POETRY_PYPI_TOKEN_PYPI",
        "config_key": "pypi-token"
      }
    },
    "maven": {
      "name": "maven",
      "language": "java",
      "registry": "https://search.maven.org",
      "api_endpoint": "https://search.maven.org/solrsearch",
      "deploy_command": "mvn deploy",
      "tracking_endpoints": [
        "https://search.maven.org/solrsearch/select?q=g:{group}+AND+a:{artifact}&rows=1&wt=json"
      ],
      "required_files": ["pom.xml"],
      "optional_files": ["README.md", "LICENSE"],
      "deploy_script": "templates/maven-deploy.sh",
      "package_manager": "maven",
      "version_file": "pom.xml",
      "version_field": "version",
      "build_command": "mvn clean compile",
      "test_command": "mvn test",
      "install_command": "mvn install",
      "authentication": {
        "type": "credentials",
        "env_var": "MAVEN_USERNAME",
        "password_env_var": "MAVEN_PASSWORD",
        "config_file": "~/.m2/settings.xml"
      }
    },
    "jcenter": {
      "name": "jcenter",
      "language": "java",
      "registry": "https://bintray.com/bintray/jcenter",
      "api_endpoint": "https://api.bintray.com",
      "deploy_command": "gradle bintrayUpload",
      "tracking_endpoints": [
        "https://api.bintray.com/packages/{owner}/{repo}/{package}/stats"
      ],
      "required_files": ["build.gradle"],
      "optional_files": ["README.md", "LICENSE"],
      "deploy_script": "templates/jcenter-deploy.sh",
      "package_manager": "gradle",
      "version_file": "build.gradle",
      "version_field": "version",
      "build_command": "gradle build",
      "test_command": "gradle test",
      "install_command": "gradle install",
      "authentication": {
        "type": "credentials",
        "env_var": "BINTRAY_USERNAME",
        "password_env_var": "BINTRAY_API_KEY",
        "config_key": "bintray"
      }
    },
    "jitpack": {
      "name": "jitpack",
      "language": "java",
      "registry": "https://jitpack.io",
      "api_endpoint": "https://jitpack.io/api",
      "deploy_command": "git tag v{version} && git push origin v{version}",
      "tracking_endpoints": [
        "https://jitpack.io/api/builds/{owner}/{repo}"
      ],
      "required_files": ["build.gradle", "pom.xml"],
      "optional_files": ["README.md", "LICENSE"],
      "deploy_script": "templates/jitpack-deploy.sh",
      "package_manager": "git",
      "version_file": "build.gradle",
      "version_field": "version",
      "build_command": "gradle build",
      "test_command": "gradle test",
      "install_command": "gradle install",
      "authentication": {
        "type": "github",
        "env_var": "GITHUB_TOKEN",
        "config_key": "github_token"
      }
    },
    "gradle": {
      "name": "gradle",
      "language": "java",
      "registry": "https://plugins.gradle.org",
      "api_endpoint": "https://plugins.gradle.org/api",
      "deploy_command": "gradle publishPlugins",
      "tracking_endpoints": [
        "https://plugins.gradle.org/api/plugins/{plugin}/stats"
      ],
      "required_files": ["build.gradle", "gradle.properties"],
      "optional_files": ["README.md", "LICENSE"],
      "deploy_script": "templates/gradle-deploy.sh",
      "package_manager": "gradle",
      "version_file": "gradle.properties",
      "version_field": "version",
      "build_command": "gradle build",
      "test_command": "gradle test",
      "install_command": "gradle install",
      "authentication": {
        "type": "token",
        "env_var": "GRADLE_PUBLISH_KEY",
        "config_key": "gradle_publish_key"
      }
    },
    "rubygems": {
      "name": "rubygems",
      "language": "ruby",
      "registry": "https://rubygems.org",
      "api_endpoint": "https://rubygems.org/api/v1",
      "deploy_command": "gem push *.gem",
      "tracking_endpoints": [
        "https://rubygems.org/api/v1/gems/{package}.json"
      ],
      "required_files": ["*.gemspec"],
      "optional_files": ["README.md", "LICENSE"],
      "deploy_script": "templates/rubygems-deploy.sh",
      "package_manager": "gem",
      "version_file": "*.gemspec",
      "version_field": "version",
      "build_command": "gem build *.gemspec",
      "test_command": "bundle exec rspec",
      "install_command": "bundle install",
      "authentication": {
        "type": "credentials",
        "env_var": "RUBYGEMS_USERNAME",
        "password_env_var": "RUBYGEMS_PASSWORD",
        "config_file": "~/.gem/credentials"
      }
    },
    "packagist": {
      "name": "packagist",
      "language": "php",
      "registry": "https://packagist.org",
      "api_endpoint": "https://packagist.org/api",
      "deploy_command": "composer publish",
      "tracking_endpoints": [
        "https://packagist.org/packages/{package}/stats.json"
      ],
      "required_files": ["composer.json"],
      "optional_files": ["README.md", "LICENSE"],
      "deploy_script": "templates/packagist-deploy.sh",
      "package_manager": "composer",
      "version_file": "composer.json",
      "version_field": "version",
      "build_command": "composer install --no-dev",
      "test_command": "composer test",
      "install_command": "composer install",
      "authentication": {
        "type": "token",
        "env_var": "PACKAGIST_TOKEN",
        "config_key": "packagist_token"
      }
    },
    "pear": {
      "name": "pear",
      "language": "php",
      "registry": "https://pear.php.net",
      "api_endpoint": "https://pear.php.net/api",
      "deploy_command": "pear package && pear upload",
      "tracking_endpoints": [
        "https://pear.php.net/api/packages/{package}/stats"
      ],
      "required_files": ["package.xml"],
      "optional_files": ["README.md", "LICENSE"],
      "deploy_script": "templates/pear-deploy.sh",
      "package_manager": "pear",
      "version_file": "package.xml",
      "version_field": "version",
      "build_command": "pear package",
      "test_command": "pear run-tests",
      "install_command": "pear install",
      "authentication": {
        "type": "credentials",
        "env_var": "PEAR_USERNAME",
        "password_env_var": "PEAR_PASSWORD",
        "config_file": "~/.pearrc"
      }
    },
    "pecl": {
      "name": "pecl",
      "language": "php",
      "registry": "https://pecl.php.net",
      "api_endpoint": "https://pecl.php.net/api",
      "deploy_command": "pecl package && pecl upload",
      "tracking_endpoints": [
        "https://pecl.php.net/api/packages/{package}/stats"
      ],
      "required_files": ["package.xml"],
      "optional_files": ["README.md", "LICENSE"],
      "deploy_script": "templates/pecl-deploy.sh",
      "package_manager": "pecl",
      "version_file": "package.xml",
      "version_field": "version",
      "build_command": "pecl package",
      "test_command": "pecl run-tests",
      "install_command": "pecl install",
      "authentication": {
        "type": "credentials",
        "env_var": "PECL_USERNAME",
        "password_env_var": "PECL_PASSWORD",
        "config_file": "~/.pearrc"
      }
    },
    "nuget": {
      "name": "nuget",
      "language": "csharp",
      "registry": "https://nuget.org",
      "api_endpoint": "https://api.nuget.org",
      "deploy_command": "dotnet nuget push *.nupkg",
      "tracking_endpoints": [
        "https://api.nuget.org/v3/registration3/{package}/index.json"
      ],
      "required_files": ["*.csproj", "*.nuspec"],
      "optional_files": ["README.md", "LICENSE"],
      "deploy_script": "templates/nuget-deploy.sh",
      "package_manager": "dotnet",
      "version_file": "*.csproj",
      "version_field": "Version",
      "build_command": "dotnet build",
      "test_command": "dotnet test",
      "install_command": "dotnet restore",
      "authentication": {
        "type": "token",
        "env_var": "NUGET_API_KEY",
        "config_key": "nuget_api_key"
      }
    },
    "myget": {
      "name": "myget",
      "language": "csharp",
      "registry": "https://myget.org",
      "api_endpoint": "https://api.myget.org",
      "deploy_command": "dotnet nuget push *.nupkg --source https://www.myget.org/F/{feed}/api/v2/package",
      "tracking_endpoints": [
        "https://api.myget.org/v3/registration3/{feed}/{package}/index.json"
      ],
      "required_files": ["*.csproj", "*.nuspec"],
      "optional_files": ["README.md", "LICENSE"],
      "deploy_script": "templates/myget-deploy.sh",
      "package_manager": "dotnet",
      "version_file": "*.csproj",
      "version_field": "Version",
      "build_command": "dotnet build",
      "test_command": "dotnet test",
      "install_command": "dotnet restore",
      "authentication": {
        "type": "token",
        "env_var": "MYGET_API_KEY",
        "config_key": "myget_api_key"
      }
    },
    "cargo": {
      "name": "cargo",
      "language": "rust",
      "registry": "https://crates.io",
      "api_endpoint": "https://crates.io/api/v1",
      "deploy_command": "cargo publish",
      "tracking_endpoints": [
        "https://crates.io/api/v1/crates/{package}"
      ],
      "required_files": ["Cargo.toml"],
      "optional_files": ["README.md", "LICENSE"],
      "deploy_script": "templates/cargo-deploy.sh",
      "package_manager": "cargo",
      "version_file": "Cargo.toml",
      "version_field": "version",
      "build_command": "cargo build --release",
      "test_command": "cargo test",
      "install_command": "cargo install",
      "authentication": {
        "type": "token",
        "env_var": "CARGO_REGISTRY_TOKEN",
        "config_key": "cargo_registry_token"
      }
    },
    "gomodules": {
      "name": "gomodules",
      "language": "go",
      "registry": "https://pkg.go.dev",
      "api_endpoint": "https://pkg.go.dev/api",
      "deploy_command": "git tag v{version} && git push origin v{version}",
      "tracking_endpoints": [
        "https://pkg.go.dev/api/packages/{package}/stats"
      ],
      "required_files": ["go.mod"],
      "optional_files": ["README.md", "LICENSE"],
      "deploy_script": "templates/gomodules-deploy.sh",
      "package_manager": "go",
      "version_file": "go.mod",
      "version_field": "version",
      "build_command": "go build",
      "test_command": "go test ./...",
      "install_command": "go mod download",
      "authentication": {
        "type": "github",
        "env_var": "GITHUB_TOKEN",
        "config_key": "github_token"
      }
    },
    "gocenter": {
      "name": "gocenter",
      "language": "go",
      "registry": "https://search.gocenter.io",
      "api_endpoint": "https://search.gocenter.io/api",
      "deploy_command": "git tag v{version} && git push origin v{version}",
      "tracking_endpoints": [
        "https://search.gocenter.io/api/packages/{package}/stats"
      ],
      "required_files": ["go.mod"],
      "optional_files": ["README.md", "LICENSE"],
      "deploy_script": "templates/gocenter-deploy.sh",
      "package_manager": "go",
      "version_file": "go.mod",
      "version_field": "version",
      "build_command": "go build",
      "test_command": "go test ./...",
      "install_command": "go mod download",
      "authentication": {
        "type": "github",
        "env_var": "GITHUB_TOKEN",
        "config_key": "github_token"
      }
    },
    "swiftpm": {
      "name": "swiftpm",
      "language": "swift",
      "registry": "https://swiftpackageindex.com",
      "api_endpoint": "https://swiftpackageindex.com/api",
      "deploy_command": "swift package --allow-writing-to-package-directory resolve",
      "tracking_endpoints": [
        "https://swiftpackageindex.com/api/packages/{package}/stats"
      ],
      "required_files": ["Package.swift"],
      "optional_files": ["README.md", "LICENSE"],
      "deploy_script": "templates/swiftpm-deploy.sh",
      "package_manager": "swift",
      "version_file": "Package.swift",
      "version_field": "version",
      "build_command": "swift build",
      "test_command": "swift test",
      "install_command": "swift package resolve",
      "authentication": {
        "type": "github",
        "env_var": "GITHUB_TOKEN",
        "config_key": "github_token"
      }
    },
    "cocoapods": {
      "name": "cocoapods",
      "language": "swift",
      "registry": "https://cocoapods.org",
      "api_endpoint": "https://cocoapods.org/api",
      "deploy_command": "pod trunk push",
      "tracking_endpoints": [
        "https://cocoapods.org/api/pods/{package}/stats"
      ],
      "required_files": ["*.podspec"],
      "optional_files": ["README.md", "LICENSE"],
      "deploy_script": "templates/cocoapods-deploy.sh",
      "package_manager": "cocoapods",
      "version_file": "*.podspec",
      "version_field": "version",
      "build_command": "pod lib lint",
      "test_command": "pod spec lint",
      "install_command": "pod install",
      "authentication": {
        "type": "credentials",
        "env_var": "COCOAPODS_USERNAME",
        "password_env_var": "COCOAPODS_PASSWORD",
        "config_file": "~/.cocoapods/config"
      }
    }
  },
  "metadata": {
    "total_platforms": 30,
    "languages_supported": 25,
    "last_updated": "2025-07-22T20:00:00Z",
    "version": "1.0.0",
    "maintainer": "Universal Package Tracker Team"
  }
} 